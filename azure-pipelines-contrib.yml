trigger:
  - develop

variables:
  contrib_major: 0
  contrib_minor: 1
  isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  python.version: '3.8'

name: $(Date:yyyyMMdd)$(Rev:rrr)

stages:
  - stage: contrib
    pool:
      vmImage: 'ubuntu-20.04'
    jobs:
      - job: changes
        steps:
          - task: ChangedFiles@1
            name: CheckChanges
            inputs:
              verbose: true
              rules: |
                [ContribChanged]
                contrib/**

                [ExperimentalChanged]
                contrib/experimental/**

      - job: lint
        dependsOn: changes
        condition: eq(dependencies.changes.outputs['CheckChanges.ContribChanged'], true)

        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(python.version)'
            displayName: 'Use Python $(python.version)'

          - script: |
              pip install isort[requirements]==5.4.2 flake8==3.8.3 black==21.8b0 pyupgrade==2.7.2
              EXIT_STATUS=0
              isort . --check-only --skip docs/ || EXIT_STATUS=$?
              black --check --exclude docs/ . || EXIT_STATUS=$?
              flake8 great_expectations/core || EXIT_STATUS=$?
              pyupgrade --py3-plus || EXIT_STATUS=$?
              exit $EXIT_STATUS

      - job: test
        dependsOn: lint

        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(python.version)'
            displayName: 'Use Python $(python.version)'

          - bash: python -m pip install --upgrade pip==20.2.4
            displayName: 'Update pip'

      - job: deploy_experimental
        dependsOn: [changes, test]
        condition: and(succeeded(), eq(dependencies.changes.outputs['CheckChanges.ExperimentalChanged'], true), eq(variables.isDevelop, true))

        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(python.version)'
            displayName: 'Use Python $(python.version)'

          - bash: python -m pip install --upgrade pip==20.2.4
            displayName: 'Update pip'

          - script: |
              pip install twine
              pip install wheel
              git config --global user.email "team@greatexpectations.io"
              git config --global user.name "Great Expectations"
              echo '$(contrib_major).$(contrib_minor).$(Build.BuildNumber)' > ./PACKAGE_VERSION
              cat ./PACKAGE_VERSION
            workingDirectory: $(Build.SourcesDirectory)/contrib/experimental
            displayName: 'Update build version'

          # Build the python distribution from source
          - script: |
              python setup.py sdist
              python setup.py bdist_wheel
            workingDirectory: $(Build.SourcesDirectory)/contrib/experimental
            displayName: 'Build distribution'

          - task: TwineAuthenticate@1
            inputs:
              pythonUploadServiceConnection: pypi-great-expectations-experimental

          # Use command line script to 'twine upload', use -r to pass the repository name and --config-file to pass the environment variable set by the authenticate task.
          - script: |
              python -m twine upload -r great-expectations-experimental --verbose --config-file $(PYPIRC_PATH) dist/*
            workingDirectory: $(Build.SourcesDirectory)/contrib/experimental
            displayName: 'Upload'
